variables:
  JEKYLL_ENV: production
  LC_ALL: C.UTF-8

stages:
  - validate
  - discovery
  - test
  - deploy

##########################
# Jekyll Build
##########################

.jekyll_template: &jekyll_template
  image: ruby:2.7
  before_script:
    - bundle install

jekyll_test:
  <<: *jekyll_template
  stage: test
  needs:
    - job: discovery_gen
      artifacts: true
  script:
    - bundle exec jekyll build -d test
  artifacts:
    paths:
    - test
  except:
  - main
  - schedule

pages:
  <<: *jekyll_template
  stage: deploy
  needs:
    - job: discovery_gen
      artifacts: true
  script:
    - bundle exec jekyll build -d public
  artifacts:
    paths:
    - public
  only:
  - main
  except:
  - schedule

##########################
# Daily data pipeline
##########################

data-pipeline-test:
  image: python:3.8
  stage: deploy
  needs: []
  variables:
    JOB_ID: ATHENA-CI-TEST
    TARGET_ATHENA_S3_BUCKET: prod-meltano-bucket-01
    DBT_TARGET: athena
    STAGE: test
    TAP_REF: tap-github-test
  before_script:
  - ''
  script:
  - cd meltano/
  - pip3 install meltano
  - meltano install
  - echo "Installing creds file from CI..." && cp $MELTANO_ENV_FILE .env
  - meltano elt $TAP_REF target-athena --job_id=$JOB_ID
  - apt-get update && apt-get install jq
  - |
    echo "Logging current state...\n" && \
    meltano elt $TAP_REF target-athena-test --job_id=$JOB_ID --dump=state |  jq '.'     

repos-daily:
  image: python:3.8
  stage: deploy
  needs: []
  variables:
    JOB_ID: GITHUB-REPOS-PROD
    TARGET_ATHENA_S3_BUCKET: prod-meltano-bucket-01
    DBT_TARGET: athena
    STAGE: prod
    TAP_REF: tap-github-repos
  before_script:
  - ''
  script:
  - cd meltano/
  - pip3 install meltano
  - meltano install
  - echo "Installing creds file from CI..." && cp $MELTANO_ENV_FILE .env
  - meltano elt $TAP_REF target-athena --job_id=$JOB_ID
  - apt-get update && apt-get install jq
  - |
    echo "Logging current state...\n" && \
    meltano elt $TAP_REF target-athena --job_id=$JOB_ID --dump=state |  jq '.'     
  only:
  - schedule

metrics-daily:
  image: python:3.8
  stage: deploy
  needs: []
  variables:
    JOB_ID: GITHUB-METRICS-PROD
    TARGET_ATHENA_S3_BUCKET: prod-meltano-bucket-01
    DBT_TARGET: athena
    STAGE: prod
    TAP_REF: tap-github-metrics
  before_script:
  - ''
  script:
  - cd meltano/
  - pip3 install meltano
  - meltano install
  - echo "Installing creds file from CI..." && cp $MELTANO_ENV_FILE .env
  - meltano elt $TAP_REF target-athena --job_id=$JOB_ID
  - apt-get update && apt-get install jq
  - |
    echo "Logging current state...\n" && \
    meltano elt $TAP_REF target-athena --job_id=$JOB_ID --dump=state |  jq '.'     
  only:
  - schedule

##########################
# discovery.yml Generation
##########################

discovery_gen:
  image: python:3
  before_script:
    - pip install PyYAML
  stage: discovery
  script:
    - python discovery_yaml_generator.py
  artifacts:
    paths:
      - discovery.yml

##########################
# Validate taps and targets
##########################

jsonschema_validation:
  image: python:3
  before_script:
    - pip install PyYAML
    - pip install jsonschema
  stage: validate
  script:
    - python yaml_validate.py
