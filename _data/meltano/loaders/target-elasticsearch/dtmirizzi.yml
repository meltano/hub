capabilities:
- about
- stream-maps
- schema-flattening
description: Free and Open, Distributed, RESTful Search Engine
domain_url: https://github.com/elastic/elasticsearch
executable: target-elasticsearch
keywords:
- meltano_sdk
label: Elasticsearch
logo_url: /assets/logos/loaders/elasticsearch.png
maintenance_status: active
name: target-elasticsearch
namespace: target_elasticsearch
next_steps: ''
pip_url: target-elasticsearch
repo: https://github.com/dtmirizzi/target-elasticsearch
settings:
- description: http scheme used for connecting to elasticsearch
  kind: string
  label: Scheme
  name: scheme
  value: http
- description: host used to connect to elasticsearch
  kind: string
  label: Host
  name: host
  value: localhost
- description: port used to connect to elasticsearch
  kind: integer
  label: Port
  name: port
  value: 9200
- description: basic auth username
  kind: string
  label: Username
  name: username
- description: basic auth password
  kind: password
  label: Password
  name: password
- description: bearer token for bearer authorization
  kind: password
  label: Bearer Token
  name: bearer_token
- description: api key id for auth key authorization
  kind: password
  label: API Key Id
  name: api_key_id
- description: api key for auth key authorization
  kind: password
  label: API Key
  name: api_key
- description: location of the the SSL certificate for cert verification ie. `/some/path`
  kind: string
  label: SSL CA File
  name: ssl_ca_file
- description: |
    Index Format is used to handle custom index formatting such as specifying `-latest` index.

    ie. the default index string defined as `ecs-{{ stream_name }}-{{ current_timestamp_daily}}` -> `ecs-animals-2022-12-25` where the stream name was animals

    Default options:
    Daily `{{ current_timestamp_daily }}` -> 2022-12-25,
    Monthly `{{ current_timestamp_monthly }}`->  2022-12,
    Yearly `{{ current_timestamp_yearly }}` -> 2022.

    You can also use fields mapped in `index_schema_fields` such as `{{ x }}` or `{{ timestamp }}`.

    There are also helper functions such as:
    to daily `{{ to_daily(timestamp) }}`,
    to monthly `{{ to_monthly(timestamp) }}`,
    to yearly `{{ to_yearly(timestamp) }}`
  kind: string
  label: Index Format
  name: index_format
  value: ecs-{{ stream_name }}-{{ current_timestamp_daily }}
- description: |
    Index Schema Fields allows you to specify specific record values via jsonpath
    from the stream to be used in index formulation.

    ie. if the stream record looks like `{"id": "1", "created_at": "12-13-202000:01:43Z"}`
    and we want to index the record via create time.
    we could specify a mapping like `index_timestamp: created_at`
    in the `index_format` we could use a template like `ecs-animals-{{ to_daily(index_timestamp) }}`
    this would put this record onto the index  `ecs-animals-2020-12-13`
  kind: object
  label: Index Schema Fields
  name: index_schema_fields
- description: |
    Metadata Fields can be used to pull out specific fields via jsonpath to be
    used on for [ecs metadata patters](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-fields.html)

    This would best be used for data that has a primary key.
    ie. `{"guid": 102, "foo": "bar"}`
    then create a mapping of `_id: guid`
  kind: object
  label: Metadata Fields
  name: metadata_fields
- description: Config object for stream maps capability. For more information check
    out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html).
  kind: object
  label: Stream Maps
  name: stream_maps
- description: User-defined config values to be used within map expressions.
  kind: object
  label: Stream Map Config
  name: stream_map_config
- description: "'True' to enable schema flattening and automatically expand nested\
    \ properties. Elastic also naturally does this so this setting is less important."
  kind: boolean
  label: Flattening Enabled
  name: flattening_enabled
- description: The max depth to flatten schemas.
  kind: integer
  label: Flattening Max Depth
  name: flattening_max_depth
settings_group_validation:
- - host
  - port
  - scheme
settings_preamble: ''
usage: ''
variant: dtmirizzi
