capabilities:
- about
- activate-version
- hard-delete
- schema-flattening
- stream-maps
description: Amazon Redshift loader
domain_url: https://aws.amazon.com/redshift/
executable: target-redshift
keywords:
- meltano_sdk
- database
label: Amazon Redshift
logo_url: /assets/logos/loaders/redshift.png
maintenance_status: active
name: target-redshift
namespace: target_redshift
next_steps: ''
pip_url: git+https://github.com/TicketSwap/target-redshift.git
quality: silver
repo: https://github.com/TicketSwap/target-redshift
settings:
- description: If set to false, the tap will ignore activate version messages. If
    set to true, add_record_metadata must be set to true as well.
  kind: boolean
  label: Activate Version
  name: activate_version
  value: false
- description: Note that this must be enabled for activate_version to work!This adds
    _sdc_extracted_at, _sdc_batched_at, and more to every table. See https://sdk.meltano.com/en/latest/implementation/record_metadata.html
    for more information.
  kind: boolean
  label: Add Record Metadata
  name: add_record_metadata
  value: false
- description: Redshift copy role arn to use for the COPY command from s3
  kind: string
  label: AWS Redshift Copy Role ARN
  name: aws_redshift_copy_role_arn
- description: Maximum number of rows in each batch.
  kind: integer
  label: Batch Size Rows
  name: batch_size_rows
- description: Redshift cluster identifier. Note if sqlalchemy_url is set or enable_iam_authentication
    is false this will be ignored.
  kind: password
  label: Cluster IDentifier
  name: cluster_identifier
  sensitive: true
- description: Database name. Note if sqlalchemy_url is set this will be ignored.
  kind: string
  label: Database Name
  name: dbname
- description: 'Redshift schema to send data to, example: tap-clickup'
  kind: string
  label: Default Target Schema
  name: default_target_schema
  value: $MELTANO_EXTRACT__LOAD_SCHEMA
- description: If true, use temporary credentials 
    (https://docs.aws.amazon.com/redshift/latest/mgmt/generating-iam-credentials-cli-api.html).
  kind: boolean
  label: Enable IAM Authentication
  name: enable_iam_authentication
- description: 'One or more LCID locale strings to produce localized output for: https://faker.readthedocs.io/en/master/#localization'
  kind: array
  label: Faker Locale
  name: faker_config.locale
- description: 'Value to seed the Faker generator for deterministic output: https://faker.readthedocs.io/en/master/#seeding-the-generator'
  kind: string
  label: Faker Seed
  name: faker_config.seed
- description: "'True' to enable schema flattening and automatically expand nested
    properties."
  kind: boolean
  label: Enable Schema Flattening
  name: flattening_enabled
- description: The max depth to flatten schemas.
  kind: integer
  label: Max Flattening Depth
  name: flattening_max_depth
- description: When activate version is sent from a tap this specefies if we should
    delete the records that don't match, or mark them with a date in the `_sdc_deleted_at`
    column. This config option is ignored if `activate_version` is set to false.
  kind: boolean
  label: Hard Delete
  name: hard_delete
  value: false
- description: Hostname for redshift instance.
  kind: string
  label: Host
  name: host
- description: The method to use when loading data into the destination. `append-only`
    will always write all input records whether that records already exists or not.
    `upsert` will update existing records and insert new records. `overwrite` will
    delete all existing records and insert all input records.
  kind: options
  label: Load Method
  name: load_method
  options:
  - label: Append Only
    value: append-only
  - label: Upsert
    value: upsert
  - label: Overwrite
    value: overwrite
  value: append-only
- description: Password used to authenticate. Note if sqlalchemy_url is set this will
    be ignored.
  kind: password
  label: Password
  name: password
  sensitive: true
- description: The port on which redshift is awaiting connection.
  kind: string
  label: Port
  name: port
  value: '5432'
- description: Whether to process `ACTIVATE_VERSION` messages.
  kind: boolean
  label: Process `ACTIVATE_VERSION` messages
  name: process_activate_version_messages
  value: true
- description: If you want to remove staging files in S3
  kind: boolean
  label: Remove S3 Files
  name: remove_s3_files
  value: false
- description: S3 bucket to save staging files before using COPY command
  kind: string
  label: S3 Bucket
  name: s3_bucket
- description: S3 key prefix to save staging files before using COPY command
  kind: password
  label: S3 Key Prefix
  name: s3_key_prefix
  sensitive: true
  value: ''
- description: AWS region for S3 bucket. If not specified, region will be detected
    by boto config resolution. See https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html
  kind: string
  label: S3 Region
  name: s3_region
- description: Whether or not to use ssl to verify the server's identity. Use ssl_certificate_authority
    and ssl_mode for further customization. To use a client certificate to authenticate
    yourself to the server, use ssl_client_certificate_enable instead.
  kind: boolean
  label: SSL Enable
  name: ssl_enable
  value: false
- description: SSL Protection method, see [redshift 
    documentation](https://docs.aws.amazon.com/redshift/latest/mgmt/connecting-ssl-support.html
    for more information. Must be one of disable, allow, prefer, require, verify-ca,
    or verify-full.
  kind: string
  label: SSL Mode
  name: ssl_mode
  value: verify-full
- description: User-defined config values to be used within map expressions.
  kind: object
  label: User Stream Map Configuration
  name: stream_map_config
- description: Config object for stream maps capability. For more information check
    out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html).
  kind: object
  label: Stream Maps
  name: stream_maps
- description: Where you want to store your temp data files.
  kind: string
  label: Temp Dir
  name: temp_dir
  value: temp
- description: User name used to authenticate. Note if sqlalchemy_url is set this
    will be ignored.
  kind: string
  label: User
  name: user
- description: Whether to validate the schema of the incoming streams.
  kind: boolean
  label: Validate Records
  name: validate_records
  value: true
settings_group_validation:
- - aws_redshift_copy_role_arn
  - s3_bucket
settings_preamble: This target uses boto3 to connect to AWS and perform copy and possibly
  credential operations. The agent running this target should be connected to AWS
  to be able to open a boto3 client.
target_schema: $TARGET_REDSHIFT_SCHEMA
usage: ''
variant: ticketswap
