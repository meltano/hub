name: target-duckdb
label: DuckDB
description: DuckDB loader
namespace: target_duckdb
logo_url: /assets/logos/loaders/duckdb.png
variant: jwills
repo: https://github.com/jwills/target-duckdb
pip_url: target-duckdb~=0.4
settings_group_validation:
  - ['filepath','default_target_schema']
settings:
  - name: filepath
    label: File Path
    kind: string
    description: Path to the local DuckDB file.
    placeholder: /path/to/local/duckdb.file
  - name: batch_size_rows
    label: Batch Size Rows
    kind: integer
    value: 100000
    description: Maximum number of rows in each batch. At the end of each batch, the rows in the batch are loaded into DuckDB.
  - name: flush_all_streams
    label: Flush All Streams
    value: false
    kind: boolean
    description: Flush and load every stream into DuckDB when one batch is full. Warning - This may trigger the COPY command to use files with low number of records.
  - name: default_target_schema
    label: Default Target Schema
    kind: string
    description: Name of the schema where the tables will be created. If schema_mapping is not defined then every stream sent by the tap is loaded into this schema.
  - name: schema_mapping
    label: schema_mapping
    kind: object
    description: |
      Useful if you want to load multiple streams from one tap to multiple DuckDB schemas.

      If the tap sends the stream_id in <schema_name>-<table_name> format then this option overwrites the default_target_schema value.
  - name: add_metadata_columns
    label: Add Metadata Columns
    kind: boolean
    value: false
    description: Metadata columns add extra row level information about data ingestions, (i.e. when was the row read in source, when was inserted or deleted in postgres etc.) Metadata columns are creating automatically by adding extra columns to the tables with a column prefix _SDC_. The column names are following the stitch naming conventions documented at https://www.stitchdata.com/docs/data-structure/integration-schemas#sdc-columns. Enabling metadata columns will flag the deleted rows by setting the _SDC_DELETED_AT metadata column. Without the add_metadata_columns option the deleted rows from singer taps will not be recognisable in DuckDB.
  - name: hard_delete
    label: Hard Delete
    kind: boolean
    value: false
    description: When hard_delete option is true then DELETE SQL commands will be performed in DuckDB to delete rows in tables. It's achieved by continuously checking the _SDC_DELETED_AT metadata column sent by the singer tap. Due to deleting rows requires metadata columns, hard_delete option automatically enables the add_metadata_columns option as well.
  - name: data_flattening_max_level
    label: Data Flattening Max Level
    kind: integer
    value: 0
    description: |
      Object type RECORD items from taps can be transformed to flattened columns by creating columns automatically.

      When value is 0 (default) then flattening functionality is turned off.
  - name: primary_key_required
    label: Primary Key Required
    kind: boolean
    value: true
    description: Log based and Incremental replications on tables with no Primary Key cause duplicates when merging UPDATE events. When set to true, stop loading data if no Primary Key is defined.
  - name: validate_records
    label: Validate Records
    kind: boolean
    value: false
    description: Validate every single record message to the corresponding JSON schema. This option is disabled by default and invalid RECORD messages will fail only at load time by DuckDB. Enabling this option will detect invalid records earlier but could cause performance degradation.
  - name: temp_dir
    label: Temporary Directory
    kind: string
    description:  Directory of temporary CSV files with RECORD messages.
maintenance_status: active
keywords:
- database
