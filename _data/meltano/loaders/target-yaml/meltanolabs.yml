capabilities:
- about
- schema-flattening
- stream-maps
description: For loading data into the YAML file format.
domain_url: https://yaml.org/
keywords:
- file
- meltano_sdk
label: YAML
logo_url: /assets/logos/loaders/yaml.png
maintenance_status: active
name: target-yaml
namespace: target_yaml
pip_url: git+https://github.com/MeltanoLabs/target-yaml.git
quality: gold
repo: https://github.com/MeltanoLabs/target-yaml
settings:
- description: 'A python format string to use when outputting the `{datestamp}` string.
    For reference, see: https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes'
  kind: string
  label: Datestamp Format
  name: datestamp_format
  value: '%Y-%m-%d'
- description: Text string to use for a yaml template file. This text will be used
    to create a new file if the destination file does not exist.
  kind: string
  label: Default Yaml Template
  name: default_yaml_template
- description: |
    The scheme with which output files will be named. Naming scheme may leverage any of the following substitutions:
     - `{stream_name}`
     - `{datestamp}`
     - `{timestamp}`
  kind: string
  label: File Naming Scheme
  name: file_naming_scheme
- description: "'True' to enable schema flattening and automatically expand nested\
    \ properties."
  kind: boolean
  label: Flattening Enabled
  name: flattening_enabled
- description: The max depth to flatten schemas.
  kind: integer
  label: Flattening Max Depth
  name: flattening_max_depth
- description: |
    Determines the overwrite behavior if destination file already exists.
    Must be one of the following string values:
      - `append_records` (default): append records at the insertion point
      - `replace_records`: replace all records at the insertion point
      - `replace_file`: replace entire file using `default_yaml_template`
  kind: string
  label: Overwrite Behavior
  name: overwrite_behavior
  value: replace_records
- description: |
    A jsonpath string determining the insertion point for new records.
    Currently, this must be the path to a map key which will be populated by a list of records.  For example "$.metrics" will populate the file with `metrics - [{<record1>},{<record2>},...]`  For JSONPath syntax help, see - https://jsonpath.com
  kind: string
  label: Record Insert Jsonpath
  name: record_insert_jsonpath
  value: $.metrics
- description: "A property in the record which will be used as the dictionary key.\n\
    \nIf this property is provided, records will be written as key-value objects;\
    \ if omitted, records are written as a list."
  kind: password
  label: Record Key Property Name
  name: record_key_property_name
- description: "A property in the record which will be used as a sort key.\n\nIf this\
    \ property is omitted, records will not be sorted."
  kind: string
  label: Record Sort Property Name
  name: record_sort_property_name
- description: User-defined config values to be used within map expressions.
  kind: object
  label: Stream Map Config
  name: stream_map_config
- description: 'Allows inline stream transformations and aliasing. For more information
    see: https://sdk.meltano.com/en/latest/stream_maps.html'
  kind: object
  label: Stream Maps
  name: stream_maps
- description: 'A python format string to use when outputting the `{timestamp}` string.
    For reference, see: https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes'
  kind: string
  label: Timestamp Format
  name: timestamp_format
  value: '%Y-%m-%d.T%H%M%S'
- description: "The timezone code or name to use when generating `{timestamp}` and\
    \ `{datestamp}`. Defaults to 'UTC'. For a list of possible values, please see:\
    \ https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"
  kind: string
  label: Timestamp Timezone
  name: timestamp_timezone
  value: UTC
settings_group_validation: []
variant: meltanolabs
