commands:
  build:
    args: build
    description: Will run your models, tests, snapshots and seeds in DAG order.
  clean:
    args: clean
    description: Delete all folders in the clean-targets list (usually the dbt_modules
      and target directories.)
  compile:
    args: compile
    description: Generates executable SQL from source model, test, and analysis files.
      Compiled SQL files are written to the target/ directory.
  debug:
    args: debug
    description: Debug your DBT project and warehouse connection.
  deps:
    args: deps
    description: Pull the most recent version of the dependencies listed in packages.yml
  describe:
    args: describe
    description: Describe the
    executable: dbt_extension
  docs-generate:
    args: docs generate
    description: Generate documentation for your project.
  docs-serve:
    args: docs serve
    description: Serve documentation for your project. Make sure you ran `docs-generate`
      first.
  freshness:
    args: source freshness
    description: Check the freshness of your source data.
  initialize:
    args: initialize
    description: |
      Initialize a new dbt project. This will create a dbt_project.yml file, a profiles.yml file, and models directory.
    executable: dbt_extension
  run:
    args: run
    description: Compile SQL and execute against the current target database.
  seed:
    args: seed
    description: Load data from csv files into your data warehouse.
  snapshot:
    args: snapshot
    description: Execute snapshots defined in your project.
  test:
    args: test
    description: Runs tests on data in deployed models.
definition: |
  is an adapter-specific dbt [transformer](https://docs.meltano.com/concepts/plugins#transformers) for running SQL-based transformations on data stored in your warehouse.

  This utility plugin is meant to be used in favor of the [dbt-bigquery transformer plugin type](/transformers/dbt-bigquery).
  Note that this plugin can only be run as part of an ELT pipeline with the `meltano run` command. If you are using `meltano elt` you should use the [transformer](/transformers/) plugins. We do recommend migrating to `meltano run` as the transformer plugin type will be deprecated in a future major Meltano release.
docs: https://docs.meltano.com/guide/transformation
executable: dbt_invoker
ext_repo: https://github.com/meltano/dbt-ext
keywords:
- meltano_edk
label: dbt BigQuery
logo_url: /assets/logos/utilities/dbt.png
maintenance_status: active
name: dbt-bigquery
namespace: dbt_bigquery
next_steps: |-
  1. If you're running dbt for the first time in a new environment:

    ```sh
    # create a starter dbt_project.yml file, a profiles.yml file, and models directory
    meltano invoke dbt-bigquery:initialize
    ```
pip_url: dbt-core dbt-bigquery git+https://github.com/meltano/dbt-ext.git@main
repo: https://github.com/dbt-labs/dbt-bigquery
settings:
- description: |
    The auth method to use. One of: "oauth", "oauth-secrets", or "service-account"
  kind: string
  label: Authentication Method
  name: auth_method
- aliases:
  - user
  description: |
    The client id to use, if authenticating via oauth-secrets method.
  kind: string
  label: Client ID
  name: client_id
- aliases:
  - password
  description: |
    The client secret to use, if authenticating via oauth-secrets method.
  kind: password
  label: Client Secret
  name: client_secret
  sensitive: true
- aliases:
  - schema
  description: |
    The dataset to use.
  kind: string
  label: Dataset
  name: dataset
- description: |
    The path to the `keyfile.json`` to use, if authenticating via service-account method.
  kind: string
  label: Keyfile
  name: keyfile
- env: DBT_PROFILES_DIR
  label: Profiles Directory
  name: profiles_dir
  value: $MELTANO_PROJECT_ROOT/transform/profiles/bigquery
- aliases:
  - database
  description: |
    The BigQuery project ID.
  kind: string
  label: Project
  name: project
- env: DBT_PROJECT_DIR
  label: Project Directory
  name: project_dir
  value: $MELTANO_PROJECT_ROOT/transform
- description: |
    The refresh token, if authenticating via oauth-secrets method.
  kind: password
  label: Refresh Token
  name: refresh_token
  sensitive: true
- description: Whether to skip pre-invoke hooks which automatically run dbt clean
    and deps
  env: DBT_EXT_SKIP_PRE_INVOKE
  kind: boolean
  label: Skip Pre-invoke
  name: skip_pre_invoke
  value: false
- env: DBT_TARGET_PATH
  kind: string
  label: Target Path
  name: target_path
  value: $MELTANO_PROJECT_ROOT/.meltano/transformers/dbt/target
- description: |
    The token redirect URI
  kind: string
  label: Token URI
  name: token_uri
- env: DBT_EXT_TYPE
  label: dbt Profile Type
  name: type
  value: bigquery
settings_group_validation: []
settings_preamble: |
  Settings for dbt itself can be configured through [dbt_project.yml](https://docs.getdbt.com/reference/dbt_project.yml) as usual, which can be found at transform/dbt_project.yml in your Meltano project. dbt also has [adapter-specific documentation for BigQuery](https://docs.getdbt.com/reference/resource-configs/bigquery-configs).
variant: dbt-labs
