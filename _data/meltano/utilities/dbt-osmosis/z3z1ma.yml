commands:
  compose:
    args: compose --project-dir ${MELTANO_PROJECT_ROOT}/transform --profiles-dir ${MELTANO_PROJECT_ROOT}/transform/profiles/${ADAPTER}
    description: A slimmer version of `run` used in precommit hooks
  diff:
    args: diff --project-dir ${MELTANO_PROJECT_ROOT}/transform --profiles-dir ${MELTANO_PROJECT_ROOT}/transform/profiles/${ADAPTER}
    description: Diff a dbt model from git HEAD to inspect changes as you develop,
      requires -m [MODEL]
  diff-cache:
    args: diff --project-dir ${MELTANO_PROJECT_ROOT}/transform --profiles-dir ${MELTANO_PROJECT_ROOT}/transform/profiles/${ADAPTER}
      --temp-table
    description: |
      Diff a query from git HEAD to inspect changes as you develop caching the HEAD rev of the model
      to a schema called `dbt_diff`, requires -m [MODEL]
  run:
    args: run --project-dir ${MELTANO_PROJECT_ROOT}/transform --profiles-dir ${MELTANO_PROJECT_ROOT}/transform/profiles/${ADAPTER}
    description: Organizes all dbt schema yaml files and cascadingly inherits documentation
      to keep it DRY.
  server:
    args: server --register-project --project-dir ${MELTANO_PROJECT_ROOT}/transform
      --profiles-dir ${MELTANO_PROJECT_ROOT}/transform/profiles/${ADAPTER}
    description: |
      Start a server exposing two primary endpoints. /compile and /run which receive POST
      requests and compile or run dbt SQL against your dbt profile. It is significantly faster
      and simpler than dbt RPC and internally does not rely on it. This server is compatible with
      https://github.com/innoverio/vscode-dbt-power-user providing VS code users interactive
      query previews via a simple ▶️ button or Cmd+Enter.
  workbench:
    args: workbench --project-dir ${MELTANO_PROJECT_ROOT}/transform --profiles-dir
      ${MELTANO_PROJECT_ROOT}/transform/profiles/${ADAPTER}
    description: |
      Start an interactive dbt workbench. Copy and paste model code into the workbench
      or author a model from scratch. The workbench allows you to write dbt with instant
      compile-as-you-type functionality. Spin it up or tear it down as needed.
definition: |
  is a tool to supercharge [dbt](https://docs.getdbt.com/) development by providing 4 key functions.
  1. A workbench for a REPL like development experience for dbt models
  2. The ability to diff model outputs across file revisions
  3. Automation which manages generating, updating, and propagating documentation for your
  `schema.yml` files.
  4. A FastAPI dbt server which principally integrates with the
  [VSCode dbt power user extension](https://github.com/innoverio/vscode-dbt-power-user).
domain_url: https://github.com/z3z1ma/dbt-osmosis
executable: dbt-osmosis
keywords:
- dbt
- osmosis
- streamlit
- fastapi
- yaml
- tooling
label: dbt-osmosis
logo_url: /assets/logos/utilities/dbt-osmosis.png
maintenance_status: active
name: dbt-osmosis
namespace: dbt_osmosis
next_steps: |
  1. Add `dbt-<adapter>` to your pip_url, ie: `pip_url: dbt-osmosis dbt-bigquery`

  2. Override the namespace to mirror your dbt adapter, ie: `namespace: dbt_bigquery`

  3. Mirror the configuration set in your `dbt-<adapter>` plugin. A simple copy-paste of
  the `config:` block should be sufficient.

  4. Ensure you additionally add `adapter: ...` to your dbt-osmosis config for the built
  in commands to work. ie for Bigquery, `adapter: bigquery`
pip_url: dbt-osmosis
repo: https://github.com/z3z1ma/dbt-osmosis
settings:
- description: |
    This should be set to the adapter you have installed as meltano will install
    dbt and its profile directory into `transform/<adapter>` directory. We use this
    config option to resolve dbt profile directory.
  env: ADAPTER
  name: adapter
variant: z3z1ma
