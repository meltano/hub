commands:
  ingest-dbt:
    args: ingest run --config ${MELTANO_PROJECT_ROOT}/utilities/datahub/dbt.dhub.yml
    description: Push dbt metadata to datahub
definition: Centrally track all your metadata assets pushing metadata to datahub.
domain_url: https://datahubproject.io/
executable: datahub
keywords:
- metadata
label: Datahub
logo_url: /assets/logos/utilities/datahub.png
maintenance_status: active
name: datahub
namespace: datahub
next_steps: |
  1. Add a source and sink

  #### Add additional metadata sources

  You should override the pip url in your meltano config to include each of the plugins
  you want to use with the ingestion framework

  1. Find the `datahub` plugin definition in your `meltano.yml` project file
  2. Update the `pip_url` property to include the desired extras (plugins):

     ```yaml
     utilities:
     - name: datahub
       variant: datahub-project
       pip_url: acryl-datahub[rest,mongodb,metabase,bigquery,bigquery-usage,dbt]
     ```
  3. Re-install the plugin:

     ```sh
     meltano install utility datahub
     ```

  The next time you run datahub cli, you will be able to ingest metadata with the appropriate source definition
  as seen [here](https://datahubproject.io/docs/metadata-ingestion).

  This plugin ships with a dbt ingestion recipe via its file-bundle.
pip_url: acryl-datahub[rest,dbt]
repo: https://github.com/datahub-project/datahub
requires:
  files:
  - name: files-datahub
    variant: z3z1ma
settings:
- description: URL of DataHub GMS endpoint. Typically this is something like `your-server:8000`
    where `your-server` is the server IP or domain name. If using metadata service
    authentication enabled in the image env (recommended), then this should instead
    point to your frontend which acts as a proxy for the GMS service. `datahub.yourdomain.com/api/gms`
  kind: string
  label: GMS Host
  name: gms_host
- description: Bearer token used for authentication. AKA Personal Access Token. Not
    needed if contacting GMS service directly.
  kind: password
  label: GMS Token
  name: gms_token
  sensitive: true
settings_group_validation: []
variant: datahub-project
