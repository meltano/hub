name: great_expectations
label: Great Expectations
namespace: great_expectations
pip_url: great_expectations
maintenance_status: active
repo: https://github.com/great-expectations/great_expectations
executable: great_expectations
variant: great-expectations
requires:
  files:
  - name: files-great-expectations
    variant: meltano
settings:
- name: ge_home
  label: Great Expectations Home Directory
  value: $MELTANO_PROJECT_ROOT/utilities/great_expectations
  env: GE_HOME
logo_url: /assets/logos/utilities/great_expectations.png
definition: helps data teams eliminate pipeline debt, through data testing, documentation, and profiling.
usage: |
  ## Additional Configuration

  If you are using Great Expectations to validate data in a database or warehouse, you
  might need to install the appropriate drivers. Common options are supported by Great Expectations
  as pip extras, and any additional packages you may want can be added too by configuring
  a custom `pip_url` for the `great_expectations` utility:

  ```bash
  # set the _pip_url extra setting
  meltano config great_expectations set _pip_url "great_expectations[redshift]; awscli"
  # re-install the great_expectations plugin for changes to take effect
  meltano install utility great_expectations
  ```
next_steps: |
  1. Refer to [the installation instructions](https://docs.meltano.com/concepts/plugins#great-expectations) for advanced configurations.
  1. Create expectations suites and checkpoints!

  If you run into any issues, [learn how to get help](#looking-for-help).
