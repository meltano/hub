commands:
  build:
    args: build
    description: Will run your models, tests, snapshots and seeds in DAG order.
  clean:
    args: clean
    description: Delete all folders in the clean-targets list (usually the dbt_modules
      and target directories.)
  compile:
    args: compile
    description: Generates executable SQL from source model, test, and analysis files.
      Compiled SQL files are written to the target/ directory.
  debug:
    args: debug
    description: Debug your DBT project and warehouse connection.
  deps:
    args: deps
    description: Pull the most recent version of the dependencies listed in packages.yml
  describe:
    args: describe
    description: Describe the
    executable: dbt_extension
  docs-generate:
    args: docs generate
    description: Generate documentation for your project.
  docs-serve:
    args: docs serve
    description: Serve documentation for your project. Make sure you ran `docs-generate`
      first.
  freshness:
    args: source freshness
    description: Check the freshness of your source data.
  initialize:
    args: initialize
    description: |
      Initialize a new dbt project. This will create a dbt_project.yml file, a profiles.yml file, and models directory.
    executable: dbt_extension
  run:
    args: run
    description: Compile SQL and execute against the current target database.
  seed:
    args: seed
    description: Load data from csv files into your data warehouse.
  snapshot:
    args: snapshot
    description: Execute snapshots defined in your project.
  test:
    args: test
    description: Runs tests on data in deployed models.
definition: |
  is an adapter-specific dbt [transformer](https://docs.meltano.com/concepts/plugins#transformers) for running SQL-based transformations on data stored in your warehouse.

  ### EDK Preview
  This utility is in a preview stage of readiness. It is based upon our Extension Developer Kit (EDK) which is the new way to build and add plugins to Meltano Hub.
  This preview of dbt will replace the native transformer once it comes out of preview. In the meantime, we would appreciate any feedback in the [EDK repo](https://github.com/meltano/edk/) and in the [dbt Extension repo](https://github.com/meltano/dbt-ext/).
docs: https://docs.meltano.com/guide/transformation
executable: dbt_invoker
ext_repo: https://github.com/meltano/dbt-ext
keywords:
- meltano_edk
label: dbt Redshift (EDK preview)
logo_url: /assets/logos/utilities/dbt.png
maintenance_status: active
name: dbt-redshift
namespace: dbt_redshift
next_steps: |-
  1. If you're running dbt for the first time in a new environment:

    ```sh
    # create a starter dbt_project.yml file, a profiles.yml file, and models directory
    meltano invoke dbt-redshift:initialize
    ```
pip_url: dbt-core~=1.3.0 dbt-redshift~=1.3.0 git+https://github.com/meltano/dbt-ext.git@main
repo: https://github.com/dbt-labs/dbt-redshift
settings:
- description: Whether to skip pre-invoke hooks which automatically run dbt clean
    and deps
  env: DBT_EXT_SKIP_PRE_INVOKE
  kind: boolean
  label: Skip Pre-invoke
  name: skip_pre_invoke
  value: false
- env: DBT_EXT_TYPE
  label: dbt Profile type
  name: type
  value: redshift
- label: Project Directory
  name: project_dir
  value: $MELTANO_PROJECT_ROOT/transform
- env: DBT_PROFILES_DIR
  label: Profiles Directory
  name: profiles_dir
  value: $MELTANO_PROJECT_ROOT/transform/profiles/redshift
- description: |
    The auth method to use (to use iam, set to "iam".
    Omit to use password-based auth.)
  kind: string
  label: Authentication Method
  name: auth_method
- description: |
    The cluster id.
  kind: string
  label: Cluster ID
  name: cluster_id
- description: |
    The host for the cluster.
  kind: string
  label: Host
  name: host
- description: |
    The password, if using password-based auth.
  kind: password
  label: Password
  name: password
- description: |
    The user to connect as.
  kind: string
  label: User
  name: user
- description: |
    The port to connect to.
  kind: integer
  label: Port
  name: port
- aliases:
  - "database"
  description: |
    The name of the db to connect to.
  kind: string
  label: Database
  name: dbname
- description: |
    The schema to use.
  kind: string
  label: Schema
  name: schema
- description: |
    The IAM profile to use.
  kind: string
  label: IAM Profile
  name: iam_profile
- description: |
    Duration of the IAM session.
  kind: integer
  label: IAM Duration Seconds
  name: iam_duration_seconds
- description: |
    Whether or not to automatically create entities.
  kind: boolean
  label: Autocreate
  name: autocreate
- description: |
    Database groups to use.
  kind: array
  label: Databse Groups
  name: db_groups
- description: |
    Seconds between TCP keepalive packets
  kind: integer
  label: Keep Alives Idle
  name: keepalives_idle
- description: |
    The search path to use (use of this setting is not recommended)
  kind: string
  label: Search Path
  name: search_path
- description: |
    SSL MOde used to connect to Redshift.
  kind: array
  label: SSL Mode
  name: sslmode
- description: |
    Enables cross-database sources.
  kind: boolean
  label: RA3 Node
  name: ra3_node
settings_preamble: |
  Settings for dbt itself can be configured through [dbt_project.yml](https://docs.getdbt.com/reference/dbt_project.yml) as usual, which can be found at transform/dbt_project.yml in your Meltano project. dbt also has [adapter-specific documentation for Redshift](https://docs.getdbt.com/reference/resource-configs/redshift-configs).
variant: dbt-labs
