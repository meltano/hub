capabilities:
- about
- catalog
- discover
- schema-flattening
- state
- stream-maps
description: The Jaffle Shop Generator, aka "jafgen" is a python-based data generator
  created by dbt Labs.
domain_url: https://github.com/dbt-labs/jaffle-shop-generator
executable: tap-jaffle-shop
keywords:
- meltano_sdk
label: Jaffle Shop Generator
logo_url: /assets/logos/extractors/jaffle-shop.png
maintenance_status: active
name: tap-jaffle-shop
namespace: tap_jaffle_shop
next_steps: ''
pip_url: git+https://github.com/MeltanoLabs/tap-jaffle-shop.git
repo: https://github.com/MeltanoLabs/tap-jaffle-shop
settings:
- description: "'True' to enable schema flattening and automatically expand nested\
    \ properties."
  kind: boolean
  label: Flattening Enabled
  name: flattening_enabled
- description: The max depth to flatten schemas.
  kind: integer
  label: Flattening Max Depth
  name: flattening_max_depth
- description: User-defined config values to be used within map expressions.
  kind: object
  label: Stream Map Config
  name: stream_map_config
- description: Config object for stream maps capability. For more information check
    out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html).
  kind: object
  label: Stream Maps
  name: stream_maps
- description: A name prefix to apply to all streams. Note that the dash ('-') character
    will be interpreted by many targets as a delimiter between schema and table name.
  kind: string
  label: Stream Name Prefix
  name: stream_name_prefix
  value: "tap_jaffle_shop-raw_"
- description: The number of years to simulate data for.
  kind: integer
  label: Years
  name: years
settings_group_validation:
- - stream_name_prefix
  - years
settings_preamble: ''
usage: |
  This dataset generator will simulate real-looking data for the following streams:
    - `stores`
    - `customers`
    - `products`
    - `orders`
    - `items`
    - `supplies`

  You can apply the `years` config to generate more or less data according to your needs.

  Note: This tap supports `state` but does not yet support incremental refresh. Each sync
  operation will generate a new dataset.
variant: meltanolabs
