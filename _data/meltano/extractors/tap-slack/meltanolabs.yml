capabilities:
- about
- catalog
- discover
- schema-flattening
- state
- stream-maps
description: Team communication tool
domain_url: https://api.slack.com/
keywords:
- meltano_sdk
label: Slack
logo_url: /assets/logos/extractors/slack.png
maintenance_status: active
name: tap-slack
namespace: tap_slack
pip_url: git+https://github.com/MeltanoLabs/tap-slack.git
prereq: |
  #### Creating the Tap-Slack App

  In order to access the records in your workspace, you will need to create a [new Slack App](https://api.slack.com/apps?new_app=1).
  Below is an example App Manifest that you can use for your workspace.
  If you would like to access additional channels, such as direct messages, you will need to provide additional scopes to your Slack app.

  ```yaml
  _metadata:
    major_version: 1
    minor_version: 1
  display_information:
    name: MeltanoLabs Tap-Slack
    description: Slack App to support the implementation of Singer.io tap-slack
    long_description: This application is used for extracting channel, user, and message data from the Slack workspace via the tap-slack application. Found on GitHub at https://github.com/MeltanoLabs/tap-slack.
  features:
    bot_user:
      display_name: MeltanoLabs Tap-Slack
      always_online: false
  oauth_config:
    redirect_urls:
      - https://meltano.com/
    scopes:
      bot:
        - channels:join
        - channels:history
        - channels:read
        - users:read
        - users:read.email
  settings:
    org_deploy_enabled: false
    socket_mode_enabled: false
    token_rotation_enabled: false
  ```

  Once you receive an API key you can test that it has proper access to your Slack app using the following curl command.

  ```bash
  curl -X GET -H 'Authorization: Bearer <Your Token>' https://slack.com/api/conversations.list?exclude_archived=False
  ```
repo: https://github.com/MeltanoLabs/tap-slack
settings:
- description: The token to authenticate against the Slack API service
  kind: password
  label: API Key
  name: api_key
- description: Whether the bot user should attempt to join channels that it has not
    yet joined. The bot user must be a member of the channel to retrieve messages.
  kind: boolean
  label: Auto Join Channels
  name: auto_join_channels
- description: The types of conversations the tap will attempt to extract data from.
    Must be one of 'public_channel', 'mpim', 'private_channel', or 'im'. Note that
    the Slack app must have the appropriate privileges and be a member of the conversations
    to sync messages.
  kind: array
  label: Channel Types
  name: channel_types
  value:
  - public_channel
- description: A list of channel IDs that should not be retrieved. Excluding overrides
    a selected setting, so if a channel is included in both selected and excluded,
    it will be excluded.
  kind: array
  label: Excluded Channels
  name: excluded_channels
- description: "'True' to enable schema flattening and automatically expand nested\
    \ properties."
  kind: boolean
  label: Flattening Enabled
  name: flattening_enabled
- description: The max depth to flatten schemas.
  kind: integer
  label: Flattening Max Depth
  name: flattening_max_depth
- description: Whether to include streams that require admin privileges or not. If
    the user does not have the proper scopes then the tap will throw and exception.
  kind: boolean
  label: Include Admin Streams
  name: include_admin_streams
- description: A list of channel IDs that should be retrieved. If not defined then
    all are selected.
  kind: array
  label: Selected Channels
  name: selected_channels
- description: The earliest record date to sync
  kind: date_iso8601
  label: Start Date
  name: start_date
- description: User-defined config values to be used within map expressions.
  kind: object
  label: Stream Map Config
  name: stream_map_config
- description: Config object for stream maps capability. For more information check
    out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html).
  kind: object
  label: Stream Maps
  name: stream_maps
- description: The number of days to look in the past for new thread replies to existing
    messages
  kind: integer
  label: Thread Lookback Days
  name: thread_lookback_days
  value: 1
settings_group_validation:
- - api_key
variant: meltanolabs
