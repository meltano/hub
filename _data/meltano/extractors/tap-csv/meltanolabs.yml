capabilities:
- catalog
- discover
description: Generic data extractor of CSV (comma separated value) files
domain_url: https://en.wikipedia.org/wiki/Comma-separated_values
keywords:
- file
- meltano_sdk
label: Comma Separated Values (CSV)
logo_url: /assets/logos/extractors/csv.png
maintenance_status: active
name: tap-csv
namespace: tap_csv
pip_url: git+https://github.com/MeltanoLabs/tap-csv.git
quality: gold
repo: https://github.com/MeltanoLabs/tap-csv
settings:
- description: When True, add the metadata columns (`_sdc_source_file`, `_sdc_source_file_mtime`,
    `_sdc_source_lineno`) to output.
  kind: boolean
  label: Add Metadata Columns
  name: add_metadata_columns
  value: false
- description: |
    Project-relative path to JSON file holding array of objects as described under [Files](#files) - with `entity`, `path`, `keys`, and other optional keys:

    ```json
    [
      {
        "entity": "<entity>",
        "path": "<path>",
        "keys": ["<key>"],
      },
      // ...
    ]
    ```
  documentation: https://github.com/MeltanoLabs/tap-csv#settings
  kind: string
  label: Csv Files Definition
  name: csv_files_definition
  placeholder: Ex. files-def.json
- description: 'One or more LCID locale strings to produce localized output for: https://faker.readthedocs.io/en/master/#localization'
  kind: array
  label: Faker Config Locale
  name: faker_config.locale
- description: 'Value to seed the Faker generator for deterministic output: https://faker.readthedocs.io/en/master/#seeding-the-generator'
  kind: string
  label: Faker Config Seed
  name: faker_config.seed
- description: |
    Array of objects with `entity`, `path`, `keys`, and `encoding` [Optional] keys:

    * `entity`: The entity name, used as the table name for the data loaded from that CSV.
    * `path`: Local path (relative to the project's root) to the file to be ingested. Note that this may be a directory, in which case all files in that directory and any of its subdirectories will be recursively processed
    * `keys`: The names of the columns that constitute the unique keys for that entity.
    * `encoding`: [Optional] The file encoding to use when reading the file (i.e. "latin1", "UTF-8"). Use this setting when you get a UnicodeDecodeError error.
      Each input CSV file must be a traditionally-delimited CSV (comma separated columns, newlines indicate new rows, double quoted values).

    The following entries are passed through in an internal CSV dialect that then is used to configure the CSV reader:

    * `delimiter`: A one-character string used to separate fields. It defaults to ','.
    * `doublequote`: Controls how instances of quotechar appearing inside a field should themselves be quoted. When True, the character is doubled. When False, the escapechar is used as a prefix to the quotechar. It defaults to True.
    * `escapechar`: A one-character string used by the reader, where the escapechar removes any special meaning from the following character. It defaults to None, which disables escaping.
    * `quotechar`: A one-character string used to quote fields containing special characters, such as the delimiter or quotechar, or which contain new-line characters. It defaults to '"'.
    * `skipinitialspace`: When True, spaces immediately following the delimiter are ignored. The default is False.
    * `strict`: When True, raise exception Error on bad CSV input. The default is False.

    The first row is the header defining the attribute name for that column and will result to a column of the same name in the database. It must have a valid format with no spaces or special characters (like for example `!` or `@`, etc).
  kind: array
  label: Files
  name: files
- description: "'True' to enable schema flattening and automatically expand nested
    properties."
  kind: boolean
  label: Flattening Enabled
  name: flattening_enabled
- description: The max depth to flatten schemas.
  kind: integer
  label: Flattening Max Depth
  name: flattening_max_depth
- description: User-defined config values to be used within map expressions.
  kind: object
  label: Stream Map Config
  name: stream_map_config
- description: Config object for stream maps capability. For more information check
    out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html).
  kind: object
  label: Stream Maps
  name: stream_maps
settings_group_validation:
- - files
- - csv_files_definition
variant: meltanolabs
