capabilities:
- about
- batch
- catalog
- discover
- schema-flattening
- state
- stream-maps
description: MySQL/MariaDB database extractor
domain_url: https://www.mysql.com/
executable: tap-mysql
keywords:
- database
- meltano_sdk
label: MySQL/MariaDB
logo_url: /assets/logos/extractors/mysql.png
maintenance_status: development
name: tap-mysql
namespace: tap_mysql
next_steps: ''
pip_url: git+https://github.com/MeltanoLabs/tap-mysql.git
quality: unknown
repo: https://github.com/MeltanoLabs/tap-mysql
settings:
- description: Compression format to use for batch files.
  kind: options
  label: Batch Config Encoding Compression
  name: batch_config.encoding.compression
  options:
  - label: Gzip
    value: gzip
  - label: None
    value: none
- description: Format to use for batch files.
  kind: options
  label: Batch Config Encoding Format
  name: batch_config.encoding.format
  options:
  - label: Jsonl
    value: jsonl
  - label: Parquet
    value: parquet
- description: Prefix to use when writing batch files.
  kind: string
  label: Batch Config Storage Prefix
  name: batch_config.storage.prefix
- description: Root path to use when writing batch files.
  kind: string
  label: Batch Config Storage Root
  name: batch_config.storage.root
- description: Database name. Note if sqlalchemy_url is set this will be ignored.
  kind: string
  label: Database
  name: database
- description: If an array of schema names is provided, the tap will only process
    the specified MySQL schemas and ignore others. If left blank, the tap automatically
    determines ALL available MySQL schemas.
  kind: array
  label: Filter Schemas
  name: filter_schemas
- description: "'True' to enable schema flattening and automatically expand nested
    properties."
  kind: boolean
  label: Flattening Enabled
  name: flattening_enabled
- description: The max depth to flatten schemas.
  kind: integer
  label: Flattening Max Depth
  name: flattening_max_depth
- description: Hostname for mysql instance. Note if sqlalchemy_url is set this will
    be ignored.
  kind: string
  label: Host
  name: host
- description: Password used to authenticate. Note if sqlalchemy_url is set this will
    be ignored.
  kind: password
  label: Password
  name: password
- description: The port on which mysql is awaiting connection. Note if sqlalchemy_url
    is set this will be ignored.
  kind: integer
  label: Port
  name: port
  value: 3306
- description: Example mysql://[username]:[password]@localhost:3306/[db_name]
  kind: string
  label: Sqlalchemy URL
  name: sqlalchemy_url
- description: Enable an ssh tunnel (also known as bastion host), see the other ssh_tunnel.*
    properties for more details
  kind: boolean
  label: SSH Tunnel Enable
  name: ssh_tunnel.enable
  value: false
- description: Host of the bastion host, this is the host we'll connect to via ssh
  kind: string
  label: SSH Tunnel Host
  name: ssh_tunnel.host
- description: Port to connect to bastion host
  kind: integer
  label: SSH Tunnel Port
  name: ssh_tunnel.port
  value: 22
- description: Private Key for authentication to the bastion host
  kind: password
  label: SSH Tunnel Private Key
  name: ssh_tunnel.private_key
- description: Private Key Password, leave None if no password is set
  kind: password
  label: SSH Tunnel Private Key Password
  name: ssh_tunnel.private_key_password
- description: Username to connect to bastion host
  kind: string
  label: SSH Tunnel Username
  name: ssh_tunnel.username
- description: User-defined config values to be used within map expressions.
  kind: object
  label: Stream Map Config
  name: stream_map_config
- description: Config object for stream maps capability. For more information check
    out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html).
  kind: object
  label: Stream Maps
  name: stream_maps
- description: User name used to authenticate. Note if sqlalchemy_url is set this
    will be ignored.
  kind: string
  label: User
  name: user
settings_group_validation:
- - ssh_tunnel.enable
  - ssh_tunnel.host
  - ssh_tunnel.port
  - ssh_tunnel.private_key
  - ssh_tunnel.username
settings_preamble: ''
usage: ''
variant: meltanolabs
