name: airflow
namespace: airflow
label: Airflow
docs: https://docs.meltano.com/guide/orchestration
repo: https://github.com/apache/airflow
pip_url: apache-airflow==2.1.2 --constraint https://raw.githubusercontent.com/apache/airflow/constraints-2.1.2/constraints-${MELTANO__PYTHON_VERSION}.txt
variant: apache
maintenance_status: active
requires:
  files:
  - name: files-airflow
    variant: meltano
commands:
  ui:
    args: webserver
    description: Start the Airflow webserver.
settings:
- name: core.dags_folder
  label: DAGs Folder
  value: $MELTANO_PROJECT_ROOT/orchestrate/dags
  env: AIRFLOW__CORE__DAGS_FOLDER
- name: core.plugins_folder
  label: Plugins Folder
  value: $MELTANO_PROJECT_ROOT/orchestrate/plugins
  env: AIRFLOW__CORE__PLUGINS_FOLDER
- name: core.sql_alchemy_conn
  label: SQL Alchemy Connection
  value: sqlite:///$MELTANO_PROJECT_ROOT/.meltano/orchestrators/airflow/airflow.db
  env: AIRFLOW__CORE__SQL_ALCHEMY_CONN
- name: core.load_examples
  label: Load Examples
  value: false
  env: AIRFLOW__CORE__LOAD_EXAMPLES
- name: core.dags_are_paused_at_creation
  label: Pause DAGs at Creation
  env: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
  value: false
logo_url: /assets/logos/orchestrators/airflow.png
settings_preamble: |
  Meltano [centralizes the configuration](https://docs.meltano.com/guide/configuration) of all of the plugins in your project, including Airflow's. This means that if the [Airflow documentation](https://airflow.apache.org/docs/apache-airflow/stable/howto/set-config.html) tells you to put something in `airflow.cfg`, you can use `meltano config`, `meltano.yml`, or environment variables instead, and get the benefits of Meltano features like [environments](https://docs.meltano.com/concepts/environments).

  Any setting you can add to `airflow.cfg` can be added to `meltano.yml`, manually or using `meltano config`. For example, `[core] executor = SequentialExecutor` becomes `meltano config airflow set core executor SequentialExecutor` on the CLI, or `core.executor: SequentialExecutor` in `meltano.yml`. Config sections indicated by `[section]` in `airflow.cfg` become nested dictionaries in `meltano.yml`.
