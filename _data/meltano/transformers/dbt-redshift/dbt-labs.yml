commands:
  build:
    args: build
    description: Will run your models, tests, snapshots and seeds in DAG order.
  clean:
    args: clean
    description: Delete all folders in the clean-targets list (usually the dbt_modules
      and target directories.)
  compile:
    args: compile
    description: Generates executable SQL from source model, test, and analysis files.
      Compiled SQL files are written to the target/ directory.
  debug:
    args: debug
    description: Debug your DBT project and warehouse connection.
  deps:
    args: deps
    description: Pull the most recent version of the dependencies listed in packages.yml
  docs-generate:
    args: docs generate
    description: Generate documentation for your project.
  docs-serve:
    args: docs serve
    description: Serve documentation for your project. Make sure you ran `docs-generate`
      first.
  freshness:
    args: source freshness
    description: Check the freshness of your source data.
  run:
    args: run
    description: Compile SQL and execute against the current target database.
  seed:
    args: seed
    description: Load data from csv files into your data warehouse.
  snapshot:
    args: snapshot
    description: Execute snapshots defined in your project.
  test:
    args: test
    description: Runs tests on data in deployed models.
docs: https://docs.meltano.com/guide/transformation
domain_url: https://www.getdbt.com/
executable: dbt
label: dbt Redshift
logo_url: /assets/logos/transformers/dbt.png
maintenance_status: active
name: dbt-redshift
namespace: dbt_redshift
pip_url: dbt-core~=1.3.0 dbt-redshift~=1.3.0
repo: https://github.com/dbt-labs/dbt-redshift
requires:
  files:
  - name: files-dbt-redshift
    variant: meltano
settings:
- label: Project Directory
  name: project_dir
  value: $MELTANO_PROJECT_ROOT/transform
- env: DBT_PROFILES_DIR
  label: Profiles Directory
  name: profiles_dir
  value: $MELTANO_PROJECT_ROOT/transform/profiles/redshift
- description: |
    The auth method to use (to use iam, set to "iam".
    Omit to use password-based auth.)
  kind: string
  label: Authentication Method
  name: auth_method
- description: |
    The cluster id.
  kind: string
  label: Cluster ID
  name: cluster_id
- description: |
    The host for the cluster.
  kind: string
  label: Host
  name: host
- description: |
    The password, if using password-based auth.
  kind: password
  label: Password
  name: password
- description: |
    The user to connect as.
  kind: string
  label: User
  name: user
- description: |
    The port to connect to.
  kind: integer
  label: Port
  name: port
- aliases:
  - database
  description: |
    The name of the db to connect to.
  kind: string
  label: Database
  name: dbname
- description: |
    The schema to use.
  kind: string
  label: Schema
  name: schema
- description: |
    The IAM profile to use.
  kind: string
  label: IAM Profile
  name: iam_profile
- description: |
    Duration of the IAM session.
  kind: integer
  label: IAM Duration Seconds
  name: iam_duration_seconds
- description: |
    Whether or not to automatically create entities.
  kind: boolean
  label: Autocreate
  name: autocreate
- description: |
    Database groups to use.
  kind: array
  label: Databse Groups
  name: db_groups
- description: |
    Seconds between TCP keepalive packets
  kind: integer
  label: Keep Alives Idle
  name: keepalives_idle
- description: |
    The search path to use (use of this setting is not recommended)
  kind: string
  label: Search Path
  name: search_path
- description: |
    SSL MOde used to connect to Redshift.
  kind: array
  label: SSL Mode
  name: sslmode
- description: |
    Enables cross-database sources.
  kind: boolean
  label: RA3 Node
  name: ra3_node
settings_preamble: |
  Settings for dbt itself can be configured through [dbt_project.yml](https://docs.getdbt.com/reference/dbt_project.yml) as usual, which can be found at transform/dbt_project.yml in your Meltano project. dbt also has [adapter-specific documentation for Redshift](https://docs.getdbt.com/reference/resource-configs/redshift-configs).
variant: dbt-labs
