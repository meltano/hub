
name: Plugin 'Test' Command Dispatcher

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - "_data/meltano/*/*/*.yml"

jobs:
  get_changed_files:
    name: Get changed files
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Get changed files
        id: changed_files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          sha: ${{ github.event.pull_request.head.sha }}
          json: "true"

      - name: Filter changed files
        id: filter_files
        run: echo "filtered_files=$(echo ${{ steps.changed_files.outputs.all_changed_files }} | jq -c 'map(select(startswith("_data/meltano/") and (endswith(".yml") and (endswith("airbyte.yml") | not))))' | sed 's/"/\\"/g')" >> "$GITHUB_OUTPUT"

      - id: set-matrix
        run: echo "matrix={\"changed_file\":${{ steps.filter_files.outputs.filtered_files }}}" >> "$GITHUB_OUTPUT"

  dispatch_tests:
    name: Dispatch tests
    runs-on: ubuntu-latest
    needs:
      - get_changed_files
    strategy:
      matrix: ${{ fromJson(needs.get_changed_files.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install yq
        env:
          VERSION: v4.28.2
          BINARY: yq_linux_amd64
        run: >
          wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - |
          tar xz && mv ${BINARY} yq && chmod u+x yq

      - name: Get the name and pip url
        run: |
          name="$(basename "$(dirname "${{ matrix.changed_file }}")")"
          plugin_type="$(basename $(dirname "$(dirname "${{ matrix.changed_file }}")"))"
          plugin_path="${{ matrix.changed_file }}"
          variant="$(./yq '.variant' "${{ matrix.changed_file }}")"
          echo "name=${name}" >> $GITHUB_ENV
          echo "plugin_type=${plugin_type}" >> $GITHUB_ENV
          echo "plugin_path=${plugin_path}" >> $GITHUB_ENV
          echo "prelude=Testing plugin \`${name}\` (\`${variant}\` variant):" >> $GITHUB_ENV

      - name: Find the MeltyBot test-command comment if it exists
        id: find_comment
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: ${{ env.prelude }}

      - uses: octokit/request-action@dad4362715b7fb2ddedf9772c8670824af564f0d # v2.4.0
        with:
          route: "POST /repos/${{ github.repository }}/actions/workflows/test-plugin-command.yml/dispatches"
          ref: 'main'
          inputs: |
            {
              "repository": "${{ github.repository }}",
              "comment-id": "${{ steps.find_comment.outputs.comment-id }}",
              "issue-number": "${{ github.event.pull_request.number }}",
              "name": "${{ env.name }}",
              "plugin-type": "${{ env.plugin_type }}",
              "plugin-path": "${{ env.plugin_path }}",
              "git-ref": "${{ github.event.pull_request.head.sha }}",
              "prepend-text": "${{ env.prelude }}"
            }
        env:
          GITHUB_TOKEN: ${{ secrets.MELTYBOT_GITHUB_AUTH_TOKEN }}
