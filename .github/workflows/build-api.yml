name: Build and publish Meltano Hub API

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:
    hub-url:
      description: The base URL of the Meltano Hub site
      required: true
      default: 'https://hub.meltano.com'
    api-url:
      description: The base URL of the Hub API
      required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.0.2

    - name: Set up Python 3.10
      uses: actions/setup-python@v4.3.0
      with:
        python-version: "3.10"

    - name: Install Poetry
      run: |
        pip install --upgrade pip poetry
        pip --version
        poetry --version

    - name: Install dependencies
      run: |
        poetry install

    - name: Set preview variables
      if: github.event_name == 'pull_request'
      # FIXME: Use GitHub secrets for the API URL
      run: |
        echo "HUB_URL=https://deploy-preview-${{ github.event.number }}--meltano-hub.netlify.app" >> $GITHUB_ENV
        echo "API_URL=https://bojtr4zf77.execute-api.us-west-2.amazonaws.com/dev" >> $GITHUB_ENV

    - name: Set production variables
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      # FIXME: Use GitHub secrets for the API URL
      # FIXME: Use a different API URL for production
      run: |
        echo "HUB_URL=https://hub.meltano.com" >> $GITHUB_ENV
        echo "API_URL=https://bojtr4zf77.execute-api.us-west-2.amazonaws.com/dev" >> $GITHUB_ENV

    - name: Set custom variables
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "HUB_URL=${{ github.event.inputs.hub-url }}" >> $GITHUB_ENV
        echo "API_URL=${{ github.event.inputs.api-url }}" >> $GITHUB_ENV

    - name: Build
      run: >
        poetry run python utility_scripts/api/make_files.py
        -o _hub_api
        --hub-url ${{ env.HUB_URL }}
        --api-url ${{ env.API_URL }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3.1.1
      with:
        name: hub-api-files
        path: "_hub_api/*"

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write # This is required for requesting the JWT
    steps:
    - uses: actions/checkout@v3.0.2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        # FIXME: Use GitHub secrets for the role
        role-to-assume: arn:aws:iam::692533893317:role/role-da44ec8
        aws-region: us-west-2
        role-session-name: "GitHubActions"
    - name: Download artifacts
      uses: actions/download-artifact@v3.0.1
      with:
        name: hub-api-files
        path: "_hub_api"
    - name: Upload to S3
      # FIXME: Use GitHub secrets for the bucket
      run: |
        aws s3 sync _hub_api s3://hub-api-dc30057/hub-api
