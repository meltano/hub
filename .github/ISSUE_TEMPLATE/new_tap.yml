name: ðŸš° New Singer Tap or Target
description: Submit a new Singer tap/target to Meltano Hub
title: "[Singer Tap/Target] <title>"
labels: []
assignees: [taylormurphy, pnadolny13]

body:
- type: markdown
  attributes:
    value: |
      All Singer definitions are stored in `/_data/meltano/extractors/` or `/_data/meltano/loaders/` and logo images are in `/assets/logos/<extractors or loaders>`. The minimal steps for adding a tap or target are the following:
      Reference the plugin definition [syntax docs](https://docs.meltano.com/reference/plugin-definition-syntax), for more details.

- type: input
  id: description
  attributes:
    label: Description
    description: General description of what the company behind the API does
  validations:
    required: true

- type: input
  id: url
  attributes:
    label: Entity URL
    description: URL of the developer documentation or website
  validations:
    required: true

- type: input
  id: name
  attributes:
    label: Name
    description: The unique name of the connector

- type: input
  id: singer_name
  attributes:
    label: Singer Name
    description: The Singer specific name of the connector. Typically tap-<name>

- type: markdown
  attributes:
    value: |
      ## Detailed Steps (GitHub web-based Editor)

      - Open the web-based editor in [MeltanoHub repo](https://github.dev/meltano/hub)

      - Add your yaml config file in `/_data/meltano/<extractors or loaders>` by clicking "New File" in the left sidebar Explorer view.

        ![Explorer View](https://github.com/meltano/hub/blob/main/.github/ISSUE_TEMPLATE/images/add-new-file.png)
        
        You can use the sample below to get started.

      - Upload your png image in `/assets/logos/<extractors or loaders>` by dragging a file from your computer to the Explorer view.

      - Commit your changes in the Source Control view

        ![Source Control View](https://github.com/meltano/hub/blob/main/.github/ISSUE_TEMPLATE/images/commit.png)

      - You'll be prompted to create a fork since you don't have access to edit directly. This automatically create a fork under your organization or username.

- type: markdown
  attributes:
    value: |
      ```yaml
      description: General description of what the company behind the API does
      label: Properly formatted label of the connector e.g. GitLab
      name: The unique name of the connector
      logo_url: /assets/logos/extractors/gitlab.png
      namespace: The namespace e.g. tap_gitlab
      variant: Name of the GitHub/GitLab namespace
      pip_url: git+<git_url>.git or pip install name
      repo: repo URL
      capabilities:
        # Chose the capabilities that the connector supports
        # Checkout for a list and details - https://hub.meltano.com/singer/docs#singer-connector-capabilities
        # Tap Capability Options
        - about
        - activate-version
        - batch
        - stream-maps
        - schema-flattening
        - catalog
        - properties
        - discover
        - state
        - test
        - log-based
        # Target Capability Options
        - about
        - activate-version
        - batch
        - stream-maps
        - schema-flattening
        - soft-delete
        - hard-delete
        - datatype-failsafe
        - record-flattening
      settings_group_validation:
      # The set of required settings.
      - - api_key
        - start_date
      settings:
      - name: api_key
        label: API Key
        kind: password
        description: The API key for this source.
      - name: start_date
        label: Start date
        description: Start date of when to start retrieve data from.
      - name: my_other_setting
        label: My Other Setting
        description: Some other setting
      domain_url: URL of the developer documentation or website
      maintenance_status: "Options: active, beta, development, inactive, unknown"
      keywords:
      # Attributes about the plugin for easier searching. Include `meltano_sdk` here if built using the SDK.
      # Other examples could be source type: `api`, `file`, `database`, etc. or cloud name `aws`, `gcp`, etc.
      - api
      - meltano_sdk
      ```
